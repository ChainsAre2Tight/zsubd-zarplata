services:
  db:
    container_name: postgres-server
    build: ./services/server/
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - ./services/server/.env.server
    ports:
      - "5435:5432"
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 15s
  client:
    image: jbergknoff/postgresql-client
    container_name: postgres-client
    restart: unless-stopped
    env_file:
      - ./services/client/.env.client
    working_dir: /usr/src/sql
    volumes:
      - ./sql:/usr/src/sql
    command: -h postgres-server
    stdin_open: true
    tty: true
    depends_on:
      db:
        condition: service_healthy
  backend:
    build: ./services/backend
    container_name: postgres-backend
    restart: unless-stopped
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./services/backend/.env
    ports:
      - "5000:5000"
    working_dir: /usr/src/backend
    command: fastapi dev main.py --port 5000 --host 0.0.0.0
    expose:
      - 5000
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./services/frontend
    container_name: postgres-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src/frontend
    ports:
      - "5010:5010"
    working_dir: /usr/src/frontend
    command: fastapi dev main.py --port 5010 --host 0.0.0.0
    expose:
      - 5010