services:
  db:
    container_name: postgres-server
    build: ./services/server/
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./services/server/ca/server.crt:/var/lib/postgresql/server.crt
      - ./services/server/ca/server.key:/var/lib/postgresql/server.key
      - ./services/server/ca/root.crt:/var/lib/postgresql/root.crt
      - ./services/server/ca/root.key:/var/lib/postgresql/root.key
      - ./services/server/ca/postgresql.crt:/var/lib/postgresql/postgresql.crt
      - ./services/server/ca/postgresql.key:/var/lib/postgresql/postgresql.key
    env_file:
      - ./services/server/.env.server
    ports:
      - "5435:5432"
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key -c ssl_ca_file=/var/lib/postgresql/root.crt
    expose:
      - 5432
      - 22
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "sslmode=verify-ca", "sslrootcert=/var/lib/postgresql/root.crt"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 15s
    profiles: ['db-only', 'e2e']
  client:
    build: './services/client'
    container_name: postgres-client
    restart: unless-stopped
    env_file:
      - ./services/client/.env.client
    working_dir: /usr/src/sql
    volumes:
      - ./sql:/usr/src/sql
      - ./services/server/ca/postgresql.crt:/root/.postgresql/postgresql.crt
      - ./services/server/ca/postgresql.key:/root/.postgresql/postgresql.key
      - ./services/server/ca/root.crt:/root/.postgresql/root.crt
    command: psql -h postgres-server sslmode=verify-ca
    stdin_open: true
    tty: true
    depends_on:
      db:
        condition: service_healthy
    profiles: ['db-only']
  backend:
    build: ./services/backend
    container_name: postgres-backend
    restart: unless-stopped
    volumes:
      - ./backend:/usr/src/backend
    env_file:
      - ./services/backend/.env
    working_dir: /usr/src/backend
    command: fastapi dev main.py --port 5000 --host 0.0.0.0
    expose:
      - 5000
    depends_on:
      db:
        condition: service_healthy
    profiles: ['e2e']
  frontend:
    build: ./services/frontend
    container_name: postgres-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src/frontend
    ports:
      - "5010:5010"
    working_dir: /usr/src/frontend
    command: fastapi dev main.py --port 5010 --host 0.0.0.0
    expose:
      - 5010
    profiles: ['front-only', 'e2e']
  nginx:
    build: ./services/nginx
    container_name: postgres-nginx
    restart: unless-stopped
    ports:
      - "3000:80"
    profiles: ['e2e']
    depends_on:
      - frontend
      - backend